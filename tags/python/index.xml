<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Chloevolution</title><link>https://chloevolution.com/tags/python/</link><description>Recent content in Python on Chloevolution</description><generator>Hugo</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 09 Apr 2024 22:00:01 +0800</lastBuildDate><atom:link href="https://chloevolution.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Read a ZST File via Python</title><link>https://chloevolution.com/posts/how-to-read-a-zst-file-python/</link><pubDate>Tue, 09 Apr 2024 22:00:01 +0800</pubDate><guid>https://chloevolution.com/posts/how-to-read-a-zst-file-python/</guid><description>&lt;script>
 
 if (!window.ZstdModulePromise) {
 
 
 const FZSTD_JS_URL = 'https://cdn.jsdelivr.net/npm/fzstd@0.1.1/umd/index.js'; 

 window.ZstdModulePromise = new Promise((resolve, reject) => {
 const script = document.createElement('script');
 script.src = FZSTD_JS_URL; 
 
 script.onload = () => {
 
 const fzstd = window.fzstd;
 
 if (fzstd &amp;&amp; typeof fzstd.decompress === 'function') {
 console.log("[DEBUG] Pure JS fzstd loaded successfully. Ready for decompression.");
 
 resolve(fzstd); 
 } else {
 reject(new Error('Pure JS decoder loaded, but the expected global fzstd object or decompress function was not found.'));
 }
 };

 script.onerror = () => {
 reject(new Error('Failed to load fzstd (Pure JS decoder) from CDN. Check network connection.'));
 };
 document.head.appendChild(script);
 });
 }

 
 function formatBytes(bytes, decimals = 2) {
 if (bytes === 0) return '0 Bytes';
 const k = 1024;
 const dm = decimals &lt; 0 ? 0 : decimals;
 const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
 const i = Math.floor(Math.log(bytes) / Math.log(k));
 return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
 }
&lt;/script>

&lt;div class="zst-reader-container" id="zst-tool-0">
 &lt;style>
 
 #zst-tool-0 .zst-buttons-row {
 display: flex;
 gap: 10px;
 flex-wrap: wrap;
 margin-bottom: 15px;
 }
 #zst-tool-0 .zst-btn {
 padding: 8px 15px;
 border-radius: 4px;
 cursor: pointer;
 border: 1px solid var(--border-color);
 background-color: var(--code-bg); 
 color: var(--code-fg); 
 transition: background-color 0.3s, opacity 0.3s;
 font-size: 1em;
 flex-grow: 1;
 max-width: 100%;
 }
 @media (min-width: 768px) {
 #zst-tool-0 .zst-btn {
 flex-grow: 0;
 }
 }
 
 #zst-tool-0 .zst-btn.primary {
 
 background-color: #3B82F6 !important; 
 
 color: white !important;
 border-color: #3B82F6 !important;
 }
 #zst-tool-0 .zst-btn.primary:hover {
 opacity: 0.9;
 }
 #zst-tool-0 .zst-btn.disabled {
 opacity: 0.5;
 cursor: not-allowed;
 }
 #zst-tool-0 textarea {
 width: 100%;
 font-family: monospace;
 border: 1px solid var(--border-color);
 padding: 10px;
 box-sizing: border-box;
 background-color: var(--code-bg);
 color: var(--code-fg);
 resize: vertical;
 }
 &lt;/style>

 &lt;div class="alert admonition primary">
 &lt;p class="admonition-title">ðŸš€ ZST File Quick Viewer&lt;/p></description></item><item><title>Customer Profiling &amp; Segmentation with Python (Source code)</title><link>https://chloevolution.com/posts/customer-profiling-and-segmentation/</link><pubDate>Sun, 07 Apr 2024 11:49:14 +0800</pubDate><guid>https://chloevolution.com/posts/customer-profiling-and-segmentation/</guid><description>&lt;p>The sample data and analysis code used in this article are from Kaggle. However, because the actual running results are different from &lt;a href="https://www.kaggle.com/code/mfaaris/customer-segmentation-insights-profiling" target="_blank" rel="noopener noreffer ">original author&lt;/a>, there are slight differences in the analysis part.&lt;/p>
&lt;p>The specific analysis process includes:&lt;/p>
&lt;ol>
&lt;li>Data Preparation&lt;/li>
&lt;li>Data Cleaning&lt;/li>
&lt;li>Data Visualization&lt;/li>
&lt;li>Data Processing&lt;/li>
&lt;li>Cluster Analysis&lt;/li>
&lt;li>Customer Profiling and Segmentation&lt;/li>
&lt;/ol>
&lt;h2 id="1-data-preparation">1. Data Preparation&lt;/h2>
&lt;p>Use the KMeans clustering algorithm to divide the data into K clusters:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">seaborn&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">sns&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">get_dummies&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn.cluster&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">KMeans&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sklearn.preprocessing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">StandardScaler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">LabelEncoder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">yellowbrick.cluster&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">KElbowVisualizer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">warnings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">warnings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filterwarnings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ignore&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="modulenotfounderror-no-module-named-yellowbrick">ModuleNotFoundError: No module named â€˜yellowbrickâ€™&lt;/h3>
&lt;p>&lt;img src="https://chloevolution.com/posts/customer-profiling-and-segmentation/yellowbrick-error_hu_924bee1d40c93ae6.png" 
 alt="yellowbrick-error" 
 width="1290" 
 height="143" 
 />&lt;/p></description></item></channel></rss>